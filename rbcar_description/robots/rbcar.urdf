<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from rbcar.urdf.xacro            | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="rbcar" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- ***************** -->
  <!-- Imported elements -->
  <!-- ***************** -->
  <!-- First we import all posible elements defined in the urdf.xacro files. All these elements are defined as macro:xacros -->
  <gazebo reference="base_footprint">
    <material>Gazebo/Green</material>
  </gazebo>
  <!-- check -->
  <!-- check -->
  <!-- xacro:macro name="rubber_wheel" params="name parent *origin reflect hq" -->
  <!-- This file unifies all sensors that can be used on simulation, defined as xacro:macros -->
  <!-- ***************** -->
  <!-- Global parameters -->
  <!-- ***************** -->
  <!-- *************** -->
  <!-- Robots Elements -->
  <!-- *************** -->
  <!-- Here we create the robot elements using the xacro:macros imported at the beggining of this file -->
  <link name="base_footprint">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <!--
      <collision>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
            <box size="0.001 0.001 0.001" />
          </geometry>
      </collision>
-->
  </link>
  <joint name="base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.317"/>
    <!-- height is the clearance -->
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  <!-- BASE_LINK -->
  <link name="base_link">
    <inertial>
      <mass value="125.0"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1.391" ixy="0.004" ixz="0.0" iyy="6.853" iyz="0.0" izz="6.125"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rbcar_description/meshes/bases/rbcar_chassis.stl"/>
      </geometry>
      <material name="gray">
        <color rgba="0.8 0.8 0.8 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0 " xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rbcar_description/meshes/bases/rbcar_chassis.stl"/>
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="ros_control">
      <controlPeriod>0.001</controlPeriod>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <legacyModeNS>false</legacyModeNS>
    </plugin>
  </gazebo>
  <!-- xacro:omni_steering prefix="" publish_tf="true"/-->
  <!-- Gazebo skid steering pluggins -->
  <!-- xacro:skid_steering broadcastOdomTF="1"/ -->
  <!-- WHEELS -->
  <joint name="left_front_shock" type="prismatic">
    <parent link="base_link"/>
    <child link="left_steering_link"/>
    <origin xyz="0.916615                    0.39901                    0.0"/>
    <axis xyz="0 0 -1"/>
    <limit effort="100" lower="-0.05" upper="0.05" velocity="1000"/>
    <joint_properties damping="0.2" friction="0.7"/>
  </joint>
  <transmission name="left_front_shock_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_front_shock">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_front_shock_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="left_steering_link">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="left_steering_joint" type="revolute">
    <parent link="left_steering_link"/>
    <child link="left_front_axle_carrier"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="-0.785398163" upper="0.785398163" velocity="25"/>
  </joint>
  <transmission name="left_steering_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_steering_joint">
      <!--<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>-->
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_steering_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="left_steering_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="left_front_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="left_front_axle" type="continuous">
    <parent link="left_front_axle_carrier"/>
    <child link="left_front_wheel"/>
    <origin rpy="1.57079633 0 3.14159265"/>
    <axis xyz="0 0 1"/>
    <limit effort="204.95" velocity="39.02"/>
    <joint_properties damping="0.2" friction="0.7"/>
  </joint>
  <transmission name="left_front_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_front_axle">
      <!-- hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface -->
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_front_axle_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="left_front_axle_carrier">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="left_front_wheel">
    <visual>
      <origin rpy="1.57079633 0 3.14159265" xyz="0                        0                        0.079"/>
      <geometry>
        <!--cylinder radius="${tire_dia / 2}" length="${tire_width}"/-->
        <mesh filename="package://rbcar_description/meshes/wheels/rbcar_wheel.stl"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
    <collision>
      <origin xyz="0                      0                      0.079"/>
      <geometry>
        <cylinder length="0.322" radius="0.317"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="8.0"/>
      <inertia ixx="0.297713166667" ixy="0" ixz="0" iyy="0.297713166667" iyz="0" izz="0.457181"/>
    </inertial>
  </link>
  <gazebo reference="left_front_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="right_front_shock" type="prismatic">
    <parent link="base_link"/>
    <child link="right_steering_link"/>
    <origin xyz="0.916615                    -0.39901                    0.0"/>
    <axis xyz="0 0 -1"/>
    <limit effort="100" lower="-0.05" upper="0.05" velocity="1000"/>
    <joint_properties damping="0.2" friction="0.7"/>
  </joint>
  <transmission name="right_front_shock_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_front_shock">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_front_shock_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="right_steering_link">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="right_steering_joint" type="revolute">
    <parent link="right_steering_link"/>
    <child link="right_front_axle_carrier"/>
    <axis xyz="0 0 1"/>
    <limit effort="50" lower="-0.785398163" upper="0.785398163" velocity="25"/>
  </joint>
  <transmission name="right_steering_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_steering_joint">
      <!--<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>-->
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_steering_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="right_steering_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="right_front_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="right_front_axle" type="continuous">
    <parent link="right_front_axle_carrier"/>
    <child link="right_front_wheel"/>
    <origin rpy="1.57079633 0 3.14159265"/>
    <axis xyz="0 0 1"/>
    <limit effort="204.95" velocity="39.02"/>
    <joint_properties damping="0.2" friction="0.7"/>
  </joint>
  <transmission name="right_front_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_front_axle">
      <!-- hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface -->
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_front_axle_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="right_front_axle_carrier">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="right_front_wheel">
    <visual>
      <origin rpy="-1.57079633 0 3.14159265" xyz="0                        0                        -0.079"/>
      <geometry>
        <!--cylinder radius="${tire_dia / 2}" length="${tire_width}"/-->
        <mesh filename="package://rbcar_description/meshes/wheels/rbcar_wheel.stl"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
    <collision>
      <origin xyz="0                      0                      -0.079"/>
      <geometry>
        <cylinder length="0.322" radius="0.317"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="8.0"/>
      <inertia ixx="0.297713166667" ixy="0" ixz="0" iyy="0.297713166667" iyz="0" izz="0.457181"/>
    </inertial>
  </link>
  <gazebo reference="right_front_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="left_rear_shock" type="prismatic">
    <parent link="base_link"/>
    <child link="left_rear_axle_carrier"/>
    <origin xyz="-0.916615                    0.49925                    0.0"/>
    <axis xyz="0 0 -1"/>
    <limit effort="100" lower="-0.05" upper="0.05" velocity="1000"/>
    <joint_properties damping="0.2" friction="0.7"/>
  </joint>
  <transmission name="left_rear_shock_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_rear_shock">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_rear_shock_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="left_rear_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="left_rear_axle" type="continuous">
    <parent link="left_rear_axle_carrier"/>
    <child link="left_rear_wheel"/>
    <origin rpy="1.57079633 0 3.14159265"/>
    <axis xyz="0 0 1"/>
    <limit effort="204.95" velocity="39.02"/>
    <joint_properties damping="0.2" friction="0.7"/>
  </joint>
  <transmission name="left_rear_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_rear_axle">
      <!-- hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface -->
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_rear_axle_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="left_rear_axle_carrier">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="left_rear_wheel">
    <visual>
      <origin rpy="1.57079633 0 3.14159265" xyz="0                        0                        0.079"/>
      <geometry>
        <!--cylinder radius="${tire_dia / 2}" length="${tire_width}"/-->
        <mesh filename="package://rbcar_description/meshes/wheels/rbcar_wheel.stl"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
    <collision>
      <origin xyz="0                      0                      0.079"/>
      <geometry>
        <cylinder length="0.322" radius="0.317"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="8.0"/>
      <inertia ixx="0.297713166667" ixy="0" ixz="0" iyy="0.297713166667" iyz="0" izz="0.457181"/>
    </inertial>
  </link>
  <gazebo reference="left_rear_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="right_rear_shock" type="prismatic">
    <parent link="base_link"/>
    <child link="right_rear_axle_carrier"/>
    <origin xyz="-0.916615                    -0.49925                    0.0"/>
    <axis xyz="0 0 -1"/>
    <limit effort="100" lower="-0.05" upper="0.05" velocity="1000"/>
    <joint_properties damping="0.2" friction="0.7"/>
  </joint>
  <transmission name="right_rear_shock_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_rear_shock">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_rear_shock_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="right_rear_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="right_rear_axle" type="continuous">
    <parent link="right_rear_axle_carrier"/>
    <child link="right_rear_wheel"/>
    <origin rpy="1.57079633 0 3.14159265"/>
    <axis xyz="0 0 1"/>
    <limit effort="204.95" velocity="39.02"/>
    <joint_properties damping="0.2" friction="0.7"/>
  </joint>
  <transmission name="right_rear_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_rear_axle">
      <!-- hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface -->
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_rear_axle_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="right_rear_axle_carrier">
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="right_rear_wheel">
    <visual>
      <origin rpy="-1.57079633 0 3.14159265" xyz="0                        0                        -0.079"/>
      <geometry>
        <!--cylinder radius="${tire_dia / 2}" length="${tire_width}"/-->
        <mesh filename="package://rbcar_description/meshes/wheels/rbcar_wheel.stl"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
    <collision>
      <origin xyz="0                      0                      -0.079"/>
      <geometry>
        <cylinder length="0.322" radius="0.317"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="8.0"/>
      <inertia ixx="0.297713166667" ixy="0" ixz="0" iyy="0.297713166667" iyz="0" izz="0.457181"/>
    </inertial>
  </link>
  <gazebo reference="right_rear_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <material name="black_alu">
    <color rgba="0.9 0.9 0.9 1"/>
  </material>
  <joint name="front_3d_lidar_base_joint" type="fixed">
    <origin rpy="0 0.24396 0" xyz="1.238 0.0 0.236"/>
    <parent link="base_link"/>
    <child link="front_3d_lidar_base_link"/>
  </joint>
  <link name="front_3d_lidar_base_link">
    <visual>
      <!-- origin xyz="0 0 0" rpy="0 0 1.5708"/ -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/benewake_ce30.stl"/>
        <!--box size="${ce30d_length} ${ce30d_width} ${ce30d_height}"/-->
      </geometry>
      <material name="black_alu"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/benewake_ce30.stl"/>
      </geometry>
    </collision>
    <inertial>
      <!-- The following are not reliable values, and should not be used for modeling -->
      <mass value="0.564"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.003881243" ixy="0.0" ixz="0.0" iyy="0.000498940" iyz="0.0" izz="0.003879257"/>
    </inertial>
  </link>
  <joint name="front_3d_lidar_joint" type="fixed">
    <parent link="front_3d_lidar_base_link"/>
    <!-- default ce30d_driver_ros configuration -->
    <child link="front_3d_lidar_link"/>
  </joint>
  <link name="front_3d_lidar_link"/>
  <gazebo reference="front_3d_lidar_link">
    <sensor name="front_3d_lidar_sensor" type="gpu_ray">
      <pose>0 0 0 0 0 0.0</pose>
      <visualize>false</visualize>
      <update_rate>30.0</update_rate>
      <ray>
        <scan>
          <horizontal>
            <!-- for a high quality simulation -->
            <samples>320</samples>
            <min_angle>-0.523598775598</min_angle>
            <max_angle>0.523598775598</max_angle>
          </horizontal>
          <vertical>
            <samples>20</samples>
            <min_angle>-0.174532925199</min_angle>
            <max_angle>0.174532925199</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.4</min>
          <max>28.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>none</type>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_velodyne_gpu_laser.so" name="front_3d_lidar_controller">
        <topicName>front_3d_lidar/points</topicName>
        <frameName>front_3d_lidar_link</frameName>
        <gaussianNoise>0.008</gaussianNoise>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="viper_base_joint" type="fixed">
    <origin rpy="0 0.1745 0.0" xyz="0.372 0.0 1.354"/>
    <parent link="base_link"/>
    <child link="viper_base_link"/>
  </joint>
  <link name="viper_base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.246 0.035 0.09"/>
        <!--<mesh filename="package://pointgrey_camera_description/meshes/rubedos_viper.dae"/>-->
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.246 0.035 0.09"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.8"/>
      <inertia ixx="0.000236184" ixy="0" ixz="0" iyy="0.00179305066667" iyz="0" izz="0.00172966666667"/>
    </inertial>
  </link>
  <joint name="viper_optical_joint" type="fixed">
    <origin rpy="-1.570796 0 -1.570796" xyz="0 0 0"/>
    <!--<origin xyz="0 0 0" rpy="0 0 0" />-->
    <parent link="viper_base_link"/>
    <child link="viper_optical_frame"/>
  </joint>
  <link name="viper_optical_frame">
    <inertial>
      <mass value="1E-5"/>
      <inertia ixx="1E-10" ixy="0" ixz="0" iyy="1E-10" iyz="0" izz="1E-10"/>
    </inertial>
  </link>
  <gazebo reference="viper_base_link">
    <sensor name="stereo_camera" type="multicamera">
      <update_rate>40</update_rate>
      <camera name="left">
        <pose>0 0 0 0 0 0 </pose>
        <horizontal_fov>1.2217</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <camera name="right">
        <pose>0.2 0 0 0 0 0</pose>
        <horizontal_fov>1.2217</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_multicamera.so" name="stereo_camera_controller">
        <alwaysOn>true</alwaysOn>
        <cameraName>viper</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>viper_optical_frame</frameName>
        <hackBaseline>0.2</hackBaseline>
        <!-- NOTE: Distortion is currently unused -->
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <ignoreTfPrefix>1</ignoreTfPrefix>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="imu_joint" type="fixed">
    <axis xyz="1 0 0"/>
    <!--origin xyz="0 0 0.2825"/-->
    <origin rpy="0 0 0" xyz="0.0 0.0 0.170"/>
    <parent link="base_link"/>
    <child link="imu_link"/>
  </joint>
  <link name="imu_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size=".001 .001 .001"/>
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_imu.so" name="imu_controller">
      <alwaysOn>true</alwaysOn>
      <topicName>imu/data</topicName>
      <serviceName>imuimu/service</serviceName>
      <bodyName>imu_link</bodyName>
      <frameId>imu_link</frameId>
      <updateRate>50.0</updateRate>
      <gaussianNoise>0.00</gaussianNoise>
      <yawOffset>0.0</yawOffset>
      <yawDrift>0.0</yawDrift>
      <yawGaussianNoise>0.0</yawGaussianNoise>
      <!-- angular velocities parameters -->
      <rateOffset>0.0 0.0 0.0</rateOffset>
      <rateDrift>0.0 0.0 0.0</rateDrift>
      <rateGaussianNoise>0.0 0.0 0.0</rateGaussianNoise>
      <!-- linear accelerations parameters -->
      <accelOffset>0.0 0.0 0.0</accelOffset>
      <accelDrift>0.0 0.0 0.0</accelDrift>
      <accelGaussianNoise>0.0 0.0 0.0</accelGaussianNoise>
    </plugin>
  </gazebo>
  <!-- ANTENNA GPS -->
  <joint name="gps_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="-0.17 0 1.5"/>
    <parent link="base_link"/>
    <child link="gps_base_link"/>
  </joint>
  <link name="gps_base_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="gps_color">
        <color rgba="1 1 1 1"/>
      </material>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/antenna_3GO16.stl" scale="1.0 1.0 1.0"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robotnik_sensors/meshes/antenna_3GO16.stl" scale="1.0 1.0 1.0"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="gps_base_link">
    <material>Gazebo/White</material>
    <gravity>true</gravity>
  </gazebo>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_gps.so" name="gps_controller">
      <alwaysOn>1</alwaysOn>
      <updateRate>5</updateRate>
      <bodyName>gps_base_link</bodyName>
      <!-- must be the link of the gps device, not the base_link or base_footprint -->
      <frameId>gps_base_link</frameId>
      <topicName>gps/fix</topicName>
      <!-- Robotnik position at Fuente del Jarro -->
      <referenceLatitude>39.5080331</referenceLatitude>
      <referenceLongitude>-0.4619816</referenceLongitude>
      <!-- To set heading in ENU orientation (degrees) -->
      <referenceHeading>90</referenceHeading>
      <velocityTopicName>gps/fix_velocity</velocityTopicName>
      <drift>0.0 0.0 0.0</drift>
      <!--<drift>0.0001 0.0001 0.0001</drift>-->
      <!--<drift>0.3 0.3 0.3</drift>-->
      <gaussianNoise>0.00001 0.00001 0.00001</gaussianNoise>
      <!--<gaussianNoise>0.00001 0.00001 0.00001</gaussianNoise>-->
      <velocityDrift>0.00001 0.00001 0.00001</velocityDrift>
      <!--<velocityGaussianNoise>0.1 0.1 0.1</velocityGaussianNoise>-->
      <velocityGaussianNoise>0.00001 0.00001 0.00001</velocityGaussianNoise>
    </plugin>
  </gazebo>
  <joint name="drive_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.917 0 0"/>
    <child link="base_footprint"/>
    <parent link="drive_link"/>
  </joint>
  <link name="drive_link"/>
  <gazebo>
    <plugin filename="librobotnik_gazebo_ground_truth_odom.so" name="ground_truth_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate>
      <bodyName>drive_link</bodyName>
      <frameName>drive_link_gt</frameName>
      <worldBodyName>world</worldBodyName>
      <worldFrameName>odom</worldFrameName>
      <topicName>odom_gt</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
      <broadcastTF>True</broadcastTF>
    </plugin>
  </gazebo>
</robot>

